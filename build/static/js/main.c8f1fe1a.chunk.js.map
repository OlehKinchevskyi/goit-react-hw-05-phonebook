{"version":3,"sources":["Components/ContactForm/ContactForm.js","Components/Layout/Layout.js","Components/Filter/Filter.js","Components/IconButton/IconButton.js","icons/delete.svg","Components/ContactList/ContactList.js","Components/Notification/Notification.js","Components/Logo/Logo.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","className","onSubmit","htmlFor","type","id","onChange","Component","defaultProps","Layout","children","Filter","onChangeFilter","contacts","CSSTransition","in","length","timeout","classNames","unmountOnExit","IconButton","onClick","_extends","Object","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","SvgDelete","_ref","svgRef","title","titleId","fill","xmlns","xmlnsXlink","x","y","viewBox","style","enableBackground","xmlSpace","ref","ForwardRef","ContactList","onRemoveContact","TransitionGroup","component","map","aria-label","width","height","Notification","message","Logo","appear","App","filter","setMassge","note","setTimeout","addContact","contact","uuidv4","find","item","toLowerCase","prevState","removeContact","contactId","changeFilter","getVisibleContacts","includes","localStorage","getItem","parselContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ommountOnExit","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.c8f1fe1a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './ContactForm.scss';\n\nexport default class ContactForm extends Component {\n    state = {\n        name: '',\n        number: ''\n    };\n\n    static propTypes = {\n        onAddContact: PropTypes.func,\n    };\n\n    static defaultProps = {};\n\n    handleChange = e => {\n        const { name, value } = e.target;\n            this.setState({\n                [name]: value,\n            });\n    };\n\n    handleSubmit = e => {\n        const { name, number } = this.state;\n        e.preventDefault();\n\n        this.props.onAddContact(name, number);\n        this.setState({\n            name: '',\n            number: ''\n            });\n    }; \n    \n    render() {\n        const { name, number } = this.state;\n        return (\n            <div>\n                <form\n                    className=\"Form\"\n                    onSubmit={this.handleSubmit} >\n                    <label\n                        htmlFor=\"name\"\n                        className=\"Label\">Name</label>\n                <input\n                    type=\"text\"\n                    value={name}\n                    id=\"name\"\n                    className=\"Input\"\n                    onChange={this.handleChange}\n                    name=\"name\"\n                    />\n            \n                    <label\n                        htmlFor=\"number\"\n                        className=\"Label\">Number</label>\n                <input\n                    type=\"tel\"\n                    value={number}\n                    id=\"number\"\n                    className=\"Input\"\n                    onChange={this.handleChange}\n                    name=\"number\"\n                    />\n                    \n                    <button\n                        type=\"submit\"\n                        className=\"ContactFormButton\">\n                      Add contact\n                    </button>\n                 </form>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './Layout.scss';\n\nconst Layout = ({ children }) =>\n    <div className=\"Layout\">{children}</div>;\n\nexport default Layout;","import './Filter.scss';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\n\n\nconst Filter = ({value, onChangeFilter, contacts}) => (\n    <CSSTransition\n        in={contacts.length > 1}\n        timeout={250}\n        classNames=\"Filter-fade\"\n        unmountOnExit>\n        \n        <div className=\"FindForm\">\n            <label\n                htmlFor=\"find\"\n                className=\"FindLabel\">\n            Find contact by name\n            </label>\n            <input\n                type=\"text\"\n                value={value}\n                id=\"find\"\n                className=\"FindInput\"\n                onChange={e => onChangeFilter(e.target.value)}/>\n        </div>\n    </CSSTransition>\n)\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Filter;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './IconButton.scss';\n\nconst IconButton = ({ children, onClick, ...allProps}) => {\n    return (\n        <button type=\"button\" onClick={onClick} className=\"IconButton\">\n            {children}\n        </button>\n    );\n};\n\nIconButton.defaultProps = {\n    onClick: () => null,\n    children: null,\n};\n\nIconButton.propTypes = {\n    onClick: PropTypes.func,\n    children: PropTypes.node,\n    'aria-label': PropTypes.string.isRequired,\n}\n\nexport default IconButton;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M59.595,52.861L37.094,30.359L59.473,7.98c1.825-1.826,1.825-4.786,0-6.611 c-1.826-1.825-4.785-1.825-6.611,0L30.483,23.748L8.105,1.369c-1.826-1.825-4.785-1.825-6.611,0c-1.826,1.826-1.826,4.786,0,6.611 l22.378,22.379L1.369,52.861c-1.826,1.826-1.826,4.785,0,6.611c0.913,0.913,2.109,1.369,3.306,1.369s2.393-0.456,3.306-1.369 l22.502-22.502l22.501,22.502c0.913,0.913,2.109,1.369,3.306,1.369s2.393-0.456,3.306-1.369 C61.42,57.647,61.42,54.687,59.595,52.861z\"\n});\n\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"currentColor\",\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 60.963 60.842\",\n    style: {\n      enableBackground: \"new 0 0 60.963 60.842\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.1378d6d9.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport './ContactList.scss';\nimport PropTypes from 'prop-types';\nimport IconButton from '../IconButton/IconButton';\nimport { ReactComponent as DeleteIcon } from '../../icons/delete.svg';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n\nconst ContactList = ({ contacts, onRemoveContact }) => {\n    return (\n            <TransitionGroup component=\"ul\">\n                {contacts.map(({ id, name, number }, i) => (\n                    <CSSTransition\n                        key={id}\n                        timeout={250}\n                        classNames=\"ContactItem-fade\">\n                        <li className=\"ContactItem\">\n                        {i + 1}. {name}: {number}\n                        <IconButton\n                            onClick={() => onRemoveContact(id)}\n                            aria-label=\"Удалить контакт\">\n                            <DeleteIcon\n                                width=\"17\"\n                                height=\"17\"\n                                fill=\"#fff\" />\n                        </IconButton>\n                        </li>\n                    </CSSTransition>\n                ))}\n            </TransitionGroup>\n    );\n};\n\nContactList.propTypes = {\n  onRemoveContact: PropTypes.func,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default ContactList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport './Notification.scss';\n\nconst Notification = ({message}) => {\n    return (\n         <CSSTransition\n            in={message}\n            timeout={250}\n            classNames=\"Notification-fade\"\n            unmountOnExit>\n            \n        <div className=\"Overlay\">\n        <p className=\"Notification\">\n            {message}\n        </p>\n        </div>\n        </CSSTransition>\n    );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired\n};\n\nexport default Notification;","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport './Logo.scss';\n\nconst Logo = () => {\n    return (\n         <CSSTransition\n             in={true}\n             appear={true}\n             timeout={500}\n             classNames=\"Title-SlideIn\"\n             unmountOnExit\n             >\n             <h1 className=\"Title\">Phonebook</h1>\n         </CSSTransition>\n    );\n};\n\nexport default Logo;","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport Layout from './Components/Layout/Layout';\nimport Filter from './Components/Filter/Filter';\nimport ContactList from './Components/ContactList/ContactList';\nimport { CSSTransition } from 'react-transition-group';\nimport Notification from './Components/Notification/Notification';\nimport Logo from './Components/Logo/Logo';\n\n\nexport default class App extends Component {\n    state = {\n        contacts: [],\n        filter: '',\n        message: null\n    };\n\n    setMassge = (note) => {\n      this.setState({ message:  note});\n      setTimeout(() => {\n      this.setState({ message: null });\n      }, 2500);\n    }\n\n    addContact = (name, number) => {\n       const contact = {\n       id: uuidv4(),\n       name,\n       number\n       };\n\n        if (name === '') {\n            this.setMassge('Enter concact name, please!');\n            return;\n        }\n        if (number === '') {\n            this.setMassge('Enter concact phone, please!');\n            return;\n        }\n        if (this.state.contacts.find((item) => item.name.toLowerCase() === name.toLowerCase())) {\n            this.setMassge('Contact already exists!');\n            return;\n        } \n        this.setState(prevState => {\n        return {contacts: [...prevState.contacts, contact],};\n        });\n    };\n    \n    removeContact = contactId => {\n        this.setState(prevState => {\n            return {\n                contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n            };\n        });\n    };\n\n    changeFilter = filter => {\n        this.setState({ filter });\n    };\n\n    getVisibleContacts = () => {\n        const { contacts, filter } = this.state;\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase()),\n        );\n    };\n  \n    componentDidMount() {\n        const contacts = localStorage.getItem('contacts');\n        const parselContacts = JSON.parse(contacts);\n\n        if (parselContacts) {\n            this.setState({ contacts: parselContacts })\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.contacts !== prevState.contacts) {\n\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n        }\n    }\n\n    render() {\n        const { contacts, filter, message } = this.state;\n        const visibleContacts = this.getVisibleContacts();\n        return ( \n            <Layout>\n\n              <Logo />  \n                \n                <Notification\n                    message={message} />\n\n                <ContactForm\n                    onAddContact={this.addContact} /> \n                    \n                <Filter\n                    value={filter}\n                    onChangeFilter={this.changeFilter}\n                    contacts={contacts}/>\n\n                <CSSTransition\n                    in={contacts.length > 0}\n                    timeout={0}\n                    ommountOnExit>     \n                <ContactList\n                    contacts={visibleContacts}\n                    onRemoveContact={this.removeContact} /> \n                </CSSTransition>\n            </Layout>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/base.scss';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />, document.querySelector('#root'),\n);\n"],"sourceRoot":""}